//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CrawlerClient.CrawlerServer {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CrawlerResultsDTO", Namespace="http://schemas.datacontract.org/2004/07/Honeycomb.Shared")]
    [System.SerializableAttribute()]
    public partial class CrawlerResultsDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<CrawlerClient.CrawlerServer.BadLinkDTO> BadLinksListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<CrawlerClient.CrawlerServer.ExternalLinkDTO> ExternalLinksListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<CrawlerClient.CrawlerServer.InternalLinkDTO> InternalLinksListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Stack<CrawlerClient.CrawlerServer.InternalLinkDTO> InternalUnprocessedLinksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CrawlerClient.CrawlerServer.SeedDTO ProcessedSeedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<CrawlerClient.CrawlerServer.BadLinkDTO> BadLinksList {
            get {
                return this.BadLinksListField;
            }
            set {
                if ((object.ReferenceEquals(this.BadLinksListField, value) != true)) {
                    this.BadLinksListField = value;
                    this.RaisePropertyChanged("BadLinksList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<CrawlerClient.CrawlerServer.ExternalLinkDTO> ExternalLinksList {
            get {
                return this.ExternalLinksListField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalLinksListField, value) != true)) {
                    this.ExternalLinksListField = value;
                    this.RaisePropertyChanged("ExternalLinksList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<CrawlerClient.CrawlerServer.InternalLinkDTO> InternalLinksList {
            get {
                return this.InternalLinksListField;
            }
            set {
                if ((object.ReferenceEquals(this.InternalLinksListField, value) != true)) {
                    this.InternalLinksListField = value;
                    this.RaisePropertyChanged("InternalLinksList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Stack<CrawlerClient.CrawlerServer.InternalLinkDTO> InternalUnprocessedLinks {
            get {
                return this.InternalUnprocessedLinksField;
            }
            set {
                if ((object.ReferenceEquals(this.InternalUnprocessedLinksField, value) != true)) {
                    this.InternalUnprocessedLinksField = value;
                    this.RaisePropertyChanged("InternalUnprocessedLinks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CrawlerClient.CrawlerServer.SeedDTO ProcessedSeed {
            get {
                return this.ProcessedSeedField;
            }
            set {
                if ((object.ReferenceEquals(this.ProcessedSeedField, value) != true)) {
                    this.ProcessedSeedField = value;
                    this.RaisePropertyChanged("ProcessedSeed");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InternalLinkDTO", Namespace="http://schemas.datacontract.org/2004/07/Honeycomb.Shared")]
    [System.SerializableAttribute()]
    public partial class InternalLinkDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsHtmlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsProcessedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LinkCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LinkPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OriginalPageLinkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageIdSeedSpecificField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PageLinkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PageSeedLinkField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsHtml {
            get {
                return this.IsHtmlField;
            }
            set {
                if ((this.IsHtmlField.Equals(value) != true)) {
                    this.IsHtmlField = value;
                    this.RaisePropertyChanged("IsHtml");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsProcessed {
            get {
                return this.IsProcessedField;
            }
            set {
                if ((this.IsProcessedField.Equals(value) != true)) {
                    this.IsProcessedField = value;
                    this.RaisePropertyChanged("IsProcessed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LinkCount {
            get {
                return this.LinkCountField;
            }
            set {
                if ((this.LinkCountField.Equals(value) != true)) {
                    this.LinkCountField = value;
                    this.RaisePropertyChanged("LinkCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LinkPath {
            get {
                return this.LinkPathField;
            }
            set {
                if ((object.ReferenceEquals(this.LinkPathField, value) != true)) {
                    this.LinkPathField = value;
                    this.RaisePropertyChanged("LinkPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OriginalPageLink {
            get {
                return this.OriginalPageLinkField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginalPageLinkField, value) != true)) {
                    this.OriginalPageLinkField = value;
                    this.RaisePropertyChanged("OriginalPageLink");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageIdSeedSpecific {
            get {
                return this.PageIdSeedSpecificField;
            }
            set {
                if ((this.PageIdSeedSpecificField.Equals(value) != true)) {
                    this.PageIdSeedSpecificField = value;
                    this.RaisePropertyChanged("PageIdSeedSpecific");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageLevel {
            get {
                return this.PageLevelField;
            }
            set {
                if ((this.PageLevelField.Equals(value) != true)) {
                    this.PageLevelField = value;
                    this.RaisePropertyChanged("PageLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PageLink {
            get {
                return this.PageLinkField;
            }
            set {
                if ((object.ReferenceEquals(this.PageLinkField, value) != true)) {
                    this.PageLinkField = value;
                    this.RaisePropertyChanged("PageLink");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PageSeedLink {
            get {
                return this.PageSeedLinkField;
            }
            set {
                if ((object.ReferenceEquals(this.PageSeedLinkField, value) != true)) {
                    this.PageSeedLinkField = value;
                    this.RaisePropertyChanged("PageSeedLink");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SeedDTO", Namespace="http://schemas.datacontract.org/2004/07/Honeycomb.Shared")]
    [System.SerializableAttribute()]
    public partial class SeedDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SeedDomainNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SeedDomainName {
            get {
                return this.SeedDomainNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SeedDomainNameField, value) != true)) {
                    this.SeedDomainNameField = value;
                    this.RaisePropertyChanged("SeedDomainName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BadLinkDTO", Namespace="http://schemas.datacontract.org/2004/07/Honeycomb.Shared")]
    [System.SerializableAttribute()]
    public partial class BadLinkDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LinkPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OriginalPageLinkField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LinkPath {
            get {
                return this.LinkPathField;
            }
            set {
                if ((object.ReferenceEquals(this.LinkPathField, value) != true)) {
                    this.LinkPathField = value;
                    this.RaisePropertyChanged("LinkPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OriginalPageLink {
            get {
                return this.OriginalPageLinkField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginalPageLinkField, value) != true)) {
                    this.OriginalPageLinkField = value;
                    this.RaisePropertyChanged("OriginalPageLink");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExternalLinkDTO", Namespace="http://schemas.datacontract.org/2004/07/Honeycomb.Shared")]
    [System.SerializableAttribute()]
    public partial class ExternalLinkDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LinkAnchorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LinkCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LinkPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LinkWeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OriginalPageLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OriginalPageLinkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PageSeedLinkField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LinkAnchor {
            get {
                return this.LinkAnchorField;
            }
            set {
                if ((object.ReferenceEquals(this.LinkAnchorField, value) != true)) {
                    this.LinkAnchorField = value;
                    this.RaisePropertyChanged("LinkAnchor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LinkCount {
            get {
                return this.LinkCountField;
            }
            set {
                if ((this.LinkCountField.Equals(value) != true)) {
                    this.LinkCountField = value;
                    this.RaisePropertyChanged("LinkCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LinkPath {
            get {
                return this.LinkPathField;
            }
            set {
                if ((object.ReferenceEquals(this.LinkPathField, value) != true)) {
                    this.LinkPathField = value;
                    this.RaisePropertyChanged("LinkPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LinkWeight {
            get {
                return this.LinkWeightField;
            }
            set {
                if ((this.LinkWeightField.Equals(value) != true)) {
                    this.LinkWeightField = value;
                    this.RaisePropertyChanged("LinkWeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OriginalPageLevel {
            get {
                return this.OriginalPageLevelField;
            }
            set {
                if ((this.OriginalPageLevelField.Equals(value) != true)) {
                    this.OriginalPageLevelField = value;
                    this.RaisePropertyChanged("OriginalPageLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OriginalPageLink {
            get {
                return this.OriginalPageLinkField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginalPageLinkField, value) != true)) {
                    this.OriginalPageLinkField = value;
                    this.RaisePropertyChanged("OriginalPageLink");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PageSeedLink {
            get {
                return this.PageSeedLinkField;
            }
            set {
                if ((object.ReferenceEquals(this.PageSeedLinkField, value) != true)) {
                    this.PageSeedLinkField = value;
                    this.RaisePropertyChanged("PageSeedLink");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClientCrawlerInfo", Namespace="http://schemas.datacontract.org/2004/07/Honeycomb")]
    [System.SerializableAttribute()]
    public partial class ClientCrawlerInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ClientIdentifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServerIPField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ClientIdentifier {
            get {
                return this.ClientIdentifierField;
            }
            set {
                if ((this.ClientIdentifierField.Equals(value) != true)) {
                    this.ClientIdentifierField = value;
                    this.RaisePropertyChanged("ClientIdentifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientName {
            get {
                return this.ClientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientNameField, value) != true)) {
                    this.ClientNameField = value;
                    this.RaisePropertyChanged("ClientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServerIP {
            get {
                return this.ServerIPField;
            }
            set {
                if ((object.ReferenceEquals(this.ServerIPField, value) != true)) {
                    this.ServerIPField = value;
                    this.RaisePropertyChanged("ServerIP");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CrawlerServer.IRemoteCrawler", CallbackContract=typeof(CrawlerClient.CrawlerServer.IRemoteCrawlerCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IRemoteCrawler {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, IsInitiating=false, Action="http://tempuri.org/IRemoteCrawler/ReturnIntermediateResults")]
        void ReturnIntermediateResults(string msg);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, IsInitiating=false, Action="http://tempuri.org/IRemoteCrawler/ReturnIntermediateResults")]
        System.Threading.Tasks.Task ReturnIntermediateResultsAsync(string msg);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IRemoteCrawler/ReturnCrawlingResults", ReplyAction="http://tempuri.org/IRemoteCrawler/ReturnCrawlingResultsResponse")]
        void ReturnCrawlingResults(CrawlerClient.CrawlerServer.CrawlerResultsDTO resultsDto);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IRemoteCrawler/ReturnCrawlingResults", ReplyAction="http://tempuri.org/IRemoteCrawler/ReturnCrawlingResultsResponse")]
        System.Threading.Tasks.Task ReturnCrawlingResultsAsync(CrawlerClient.CrawlerServer.CrawlerResultsDTO resultsDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRemoteCrawler/Join", ReplyAction="http://tempuri.org/IRemoteCrawler/JoinResponse")]
        System.Collections.Generic.List<CrawlerClient.CrawlerServer.ClientCrawlerInfo> Join(CrawlerClient.CrawlerServer.ClientCrawlerInfo clientCrawlerInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRemoteCrawler/Join", ReplyAction="http://tempuri.org/IRemoteCrawler/JoinResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<CrawlerClient.CrawlerServer.ClientCrawlerInfo>> JoinAsync(CrawlerClient.CrawlerServer.ClientCrawlerInfo clientCrawlerInfo);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, IsTerminating=true, IsInitiating=false, Action="http://tempuri.org/IRemoteCrawler/Leave")]
        void Leave();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, IsTerminating=true, IsInitiating=false, Action="http://tempuri.org/IRemoteCrawler/Leave")]
        System.Threading.Tasks.Task LeaveAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRemoteCrawlerCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IRemoteCrawler/StartTestCrawl")]
        void StartTestCrawl();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IRemoteCrawler/StartCrawling")]
        void StartCrawling(string siteURL);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRemoteCrawlerChannel : CrawlerClient.CrawlerServer.IRemoteCrawler, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RemoteCrawlerClient : System.ServiceModel.DuplexClientBase<CrawlerClient.CrawlerServer.IRemoteCrawler>, CrawlerClient.CrawlerServer.IRemoteCrawler {
        
        public RemoteCrawlerClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public RemoteCrawlerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public RemoteCrawlerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public RemoteCrawlerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public RemoteCrawlerClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void ReturnIntermediateResults(string msg) {
            base.Channel.ReturnIntermediateResults(msg);
        }
        
        public System.Threading.Tasks.Task ReturnIntermediateResultsAsync(string msg) {
            return base.Channel.ReturnIntermediateResultsAsync(msg);
        }
        
        public void ReturnCrawlingResults(CrawlerClient.CrawlerServer.CrawlerResultsDTO resultsDto) {
            base.Channel.ReturnCrawlingResults(resultsDto);
        }
        
        public System.Threading.Tasks.Task ReturnCrawlingResultsAsync(CrawlerClient.CrawlerServer.CrawlerResultsDTO resultsDto) {
            return base.Channel.ReturnCrawlingResultsAsync(resultsDto);
        }
        
        public System.Collections.Generic.List<CrawlerClient.CrawlerServer.ClientCrawlerInfo> Join(CrawlerClient.CrawlerServer.ClientCrawlerInfo clientCrawlerInfo) {
            return base.Channel.Join(clientCrawlerInfo);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<CrawlerClient.CrawlerServer.ClientCrawlerInfo>> JoinAsync(CrawlerClient.CrawlerServer.ClientCrawlerInfo clientCrawlerInfo) {
            return base.Channel.JoinAsync(clientCrawlerInfo);
        }
        
        public void Leave() {
            base.Channel.Leave();
        }
        
        public System.Threading.Tasks.Task LeaveAsync() {
            return base.Channel.LeaveAsync();
        }
    }
}
